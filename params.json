{"name":"Bitminter-logger","tagline":"A package for logging your bitcoin miner performance","body":"### Bitminter-Logger\r\n\r\nThis package is a simple python app for logging Bitminter and MtGox info to log files.  One can easily then feed the data into something like Splunk for further analysis/pretty charts.\r\n\r\nQuick Setup\r\n===========\r\nClone the repo\r\n```\r\n$ cd your_code_folder\r\n$ git clone https://github.com/adewinter/bitminter-logger.git\r\n$ pip install requests #this is required\r\n$ nano bitminter.py  #Make sure to add your own API key and SECRET key, otherwise you'll get my stats :)\r\n$ python bitminter.py\r\n```\r\nThis will immediately start logging your mining performance on the Bitminter pool to a file named `bitminter.log`.\r\n\r\nSimilarly, you can pull MtGox ticker data:\r\n\r\n```\r\n$ python mtgoxticker.py\r\n```\r\nThis will generate a file called `mtgoxticker.log` containing ticker information in JSON format.\r\n\r\n\r\nNote\r\n====\r\nThe log data is formatted for ease of use in [Splunk](http://www.splunk.com/).  What this essentially means is that everything is a key-value pair using the `=` char for pairing.  Pairs are space (' ') separated.  In both log files, that essentially amounts to one pair: `Request={JSON_BLOB}` with some timestamp information at the start of the line.\r\n\r\nRecommendations\r\n===============\r\nRun these puppies in Screen so that they can continue to run in the background with minimal fuss.\r\n\r\n\r\nExample Output\r\n==============\r\nAfter adding the data to Splunk, I was able to quickly generate the following dashboard:\r\n\r\n\r\n","google":"UA-36829629-2","note":"Don't delete this file! It's used internally to help with page regeneration."}